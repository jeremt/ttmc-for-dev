{
    "cards": [
        {
            "theme": "D√©claration de Variables JS",
            "category": "dev-front",
            "questions": [
                "Quel mot cl√© entre `let`, `var`, et `if` ne permet pas de d√©clarer une variable ?",
                "Quel est le mot cl√© utilis√© pour d√©clarer une variable dont la valeur ne doit pas changer ?",
                "Est-ce qu'une variable peut changer de type apr√®s sa d√©claration ?",
                "Comment appelle-t-on la syntaxe qui permet de d√©clarer plusieurs variables √† partir des champs d'un object ?",
                "Qu'est-ce que le hoisting et quel mot cl√© permet de hoister une variable ?"
            ],
            "answers": [
                "`if`, c'est pour les conditions !",
                "`const`",
                "Oui. JS est un langage au typage dynamique, ce qui fait que le type d'une variable peut changer n'importe quand.",
                "On appelle cette syntaxe la destructuration. Par exemple: `const {name, age} = person;`.",
                "Le hoisting permet d'acc√©der √† une variable avant sa d√©claration. On utilise le mot cl√© `var` pour hoister une variable."
            ]
        },
        {
            "theme": "Tableaux en Javascript",
            "category": "dev-front",
            "questions": [
                "Comment acc√©de-t-on au dernier √©l√©ment d'un tableau en JS ? (+ 1 si tu connais deux m√©thodes)",
                "Peut-on modifier le contenu d'un tableau d√©clar√© avec le mot-cl√© `const` ?",
                "Les tableaux sont-ils implement√©s de la m√™me mani√®re que dans la plupart des languages ?",
                "`Array(1) === [undefined] && Array(1)[0] === undefined`, √ßa revoie `true` ou `false` ?",
                "Quel serait le r√©sultat de [1,`80`, 9, `16`].sort() ?"
            ],
            "answers": [
                "`arr[length - 1]` ou `arr.findLast(el => el)`",
                "Oui, car la variable fait r√©ference au tableau pas √† son contenu et cette r√©ference ne change pas.",
                "Non, en g√©n√©ral un tableau correspond √† une plage d'adresses m√©moire dont la taille est fixe.",
                "False! Les √©l√©ments vides ne sont pas explicitement ind√©finis, mais tenter d'y acc√©der renvoie `undefined`.",
                "[1, `16`, `80`, 9], car par d√©faut, Array.sort() converti les √©l√©ments en cha√Ænes de caract√®res et compare leur valeur Unicode."
            ]
        },
        {
            "theme": "HTML",
            "category": "dev-front",
            "questions": [
                "Quelle balise permet d'afficher une image ?",
                "Quelles sont les 2 balises que l'on utilise lorsqu'on ne veut pas de s√©mantique en particulier ?",
                "Quel attribut utilise-t-on pour ouvrir un lien dans un nouvel onglet ?",
                "Quel attribut permet d'attendre que le HTML soit enti√®rement charg√© avant d'ex√©cuter le contenu d'une balise script ?",
                "Quel pr√©fixe d'attribut utilise-t-on g√©n√©ralement pour ajouter des informations d'accessibilit√© √† une balise ? (+1 case si tu d√©tailles l'acronyme)"
            ],
            "answers": [
                "Il s'agit de la balise `<img />`.",
                "On utilise les balises `<div>` et `<span>`.",
                "On utilise l'attribut `target=\"_blank\"`.",
                "L'attribut `defer`, exemple : `<script defer src=\"index.js\"></script>`.",
                "Le prefix `aria-` qui signifie Accessible Rich Internet Applications."
            ]
        },
        {
            "theme": "Formulaires HTML",
            "category": "dev-front",
            "questions": [
                "Quel √©l√©ment doit √™tre associ√© √† un `<input>` pour des questions d'accessibilit√© et de validit√© du formulaire ?",
                "Quel √©l√©ment utilise-t-on pour cr√©er un champ de texte dans un formulaire, `<input type='text'>` ou `<input type='field'>` ?",
                "Quelle paire d'√©l√©ments permet de cr√©er une sous-section dans un formulaire et d'y ajouter des instructions ou des pr√©cisions ?",
                "Comment faire pour permettre aux utilisateurs d'envoyer un selfie via un formulaire ?",
                "Quelle valeur autre que `get` et `post` peut-on donner √† l'attribut `action` d'un formulaire ?"
            ],
            "answers": [
                "Il faut toujours associer un √©l√©ment `<label>` √† un champ de formulaire.",
                "On utilise `type='text'`, mais `type='field'` fonctionne tout de m√™me car l'attribut type par d√©faut est `text` et `field` n'existe pas.",
                "On d√©limite un groupe de champs avec `<fieldset>`, auquel on associera l'√©l√©ment `<legend>`.",
                "On ajoute √† un <input type='file'> l'attribut `capture='user'`.",
                "La valeur `dialog`, qui permet de fermer une bo√Æte de dialogue (`<dialog>`) dans laquelle le formulaire est contenu."
            ]
        },
        {
            "theme": "Framework JS",
            "category": "dev-front",
            "questions": [
                "Peux-tu citer tous les frameworks JS cr√©√©s depuis 2007 ?",
                "√Ä quoi sert Express JS ?",
                "Quelle est la diff√©rence entre React et Next ?",
                "Dans quel ordre sont sortis les frameworks Vue, Svelte et React ?",
                "Quelle est la diff√©rence fondamentale entre le mod√®le de Reactivit√© de Solid et React ?"
            ],
            "answers": [
                "Que tu r√©pondes oui ou non, tu as r√©pondu √† la question, bien jou√© !",
                "Il permet de cr√©er des backends et des APIs en Node JS.",
                "Next est une surcouche de React permettant de gen√©rer des components c√¥t√© serveur.",
                "React, Vue puis Svelte",
                "React s'appuie sur le virtual DOM alors que Solid met √† jour le DOM directement."
            ]
        },
        {
            "theme": "React Hooks",
            "category": "dev-front",
            "questions": [
                "Vrai ou faux ? Le capitaine Crochet est l'ennemi jur√© de Peter Pan.",
                "Par quel mot commence le nom des fonctions de type hook ?",
                "Quel hook permet de r√©cup√©rer une valeur dans un sous composant sans passer par les props ?",
                "Pourquoi `useMemo()` retourne une fonction et pas directement une valeur ?",
                "√Ä quoi sert le hook `useCallback() ?`"
            ],
            "answers": [
                "Vrai, m√™me si j'avoue √ßa n'a pas grand chose √† voir.",
                "Elles commencent toujours par `use`. `useState()` ou `useEffect()` par exemple.",
                "`useContext()`",
                "Car la valeur doit pouvoir √™tre recalcul√©e en fonction des d√©pendances.",
                "Il sert √† memoifier une fonction pour √©viter de la cr√©er et donc d√©clencher un rendu des composants enfants qui l'utilisent."
            ]
        },
        {
            "theme": "TypeScript",
            "category": "dev-front",
            "questions": [
                "TypeScript permet de rajouter √† JavaScript des types ou des emojis ?",
                "Dans le code `const n: number = 10;` le type est-il obligatoire ?",
                "Une variable de type `Status` peut √™tre √©gale √† `'success'` ou `'error'`. √Ä quoi ressemble le type `Status` ?",
                "Quelle est la diff√©rence entre `as` et `satisfies` ?",
                "`type A<T> = {[K in keyof T as K extends number ? never : K]: T[K];};` que fait ce type ?"
            ],
            "answers": [
                "Des emojis ! (nan j'rigole)",
                "Non car TypeScript peut l'inf√©rer automatiquement.",
                "`type Status = 'success' | 'error';`",
                "`as` force la conversion alors que `satisfies` v√©rifie si la valeur et le type sont compatibles.",
                "Il s'agit d'un 'mapped type', il filtre les cl√©s de type number `{0: 1, a: 2}` devient `{a: 2}`."
            ]
        },
        {
            "theme": "Protocole HTTP",
            "category": "dev-back",
            "questions": [
                "HTTP signifie Hyper Text Transfer Protocol ou Hyper Techno Turtle Party ?",
                "Quelle m√©thode HTTP utilise-t-on pour supprimer une donn√©e ?",
                "Quelle est la diff√©rence entre les m√©thodes `PUT` et `PATCH` ?",
                "Que signifie le status HTTP 403 ?",
                "Quel est le temps d'expiration par d√©faut d'un cookie ? Quels attributs utilise-t-on sinon pour le sp√©ficier ?"
            ],
            "answers": [
                "Hyper Text Transfer Protocol, m√™me si j'aurais pr√©f√©r√© l'autre ü§∑",
                "`DELETE`",
                "PUT remplace la ressource alors que PATCH fait une mise √† jour partielle.",
                "403 Forbidden est le status HTTP utilis√© lorsque la requ√™te est comprise mais pas autoris√©e par le serveur.",
                "Par d√©faut, un cookie expire √† la fin de la session utilisateur. Sinon on peut utiliser Max-Age ou Expires pour le sp√©cifier."
            ]
        },
        {
            "theme": "Classes en Python",
            "category": "dev-back",
            "questions": [
                "Quelle convention applique-t-on aux noms de classes, `snake_case`, `PascalCase` ou `KantCase` ?",
                "Quel mot-cl√© fait r√©f√©rence √† un attribut d'instance, `self` ou `this` ?",
                "Quelle alternative √† l'initialisation `()` peut-on utiliser pour cr√©er une instance de classe ?",
                "Peut-on acc√©der directement √† un attribut d'instance d√©finit par un nom commen√ßant par un tiret bas ?",
                "Comment cr√©er une propri√©t√© calcul√©e ?"
            ],
            "answers": [
                "`PascalCase`, en r√©f√©rence au language Pascal, qui doit son nom au philosophe et math√©maticien Blaise Pascal. ",
                "`self`, `this` est l'√©quivalent en Javascript.",
                "On peut d√©finir une m√©thode de classe qui renvoie une instance, on parle alors de `factory method` (m√©thode usine).",
                "Oui, les attributs priv√©s n'existent pas r√©ellement en Python.",
                "On utilise le d√©corateur `@property` pour d√©finir une m√©thode √† laquelle on peut acc√©der avec la syntaxe `class.property`."
            ]
        },
        {
            "theme": "Structures de donn√©es en Python",
            "category": "dev-back",
            "questions": [
                "A quelle structure de donn√©es correspond la notation entre crochets ?",
                "Laquelle de ces structures de donn√©es n'existe pas par d√©faut: `set`, `array` ou `dict` ?",
                "Quelle est la diff√©rence entre `sorted(list)` et `list.sort()` ?",
                "Pourquoi utiliser `dict.items()` plutot que `list(dict)` ?",
                "L'expression `def function(): return 1, 2, 3, 4` -> `a, b, c, d = function();` est valide, pourquoi ?"
            ],
            "answers": [
                "`list`, similaire aux tableaux en Javascript.",
                "`array`, correspondant aux tableaux au sens classique. Ils sont disponibles dans la librairie NumPy.",
                "`sorted()` renvoie une copie tri√©e de la liste, alors que `list.sort()` modifie directement la liste existante.",
                "`dict.items()` permet d'it√©rer sur le dictionnaire en acc√©dant aux cl√©s et aux valeurs, `list(dict)` ne comprends que les cl√©s.",
                "La fonction retourne implicitement un `tuple` et assigne automatiquement les entr√©es aux variables."
            ]
        },
        {
            "theme": "Requ√™tes SQL",
            "category": "dev-back",
            "questions": [
                "SQL signifie Structured Query Language ou Secret Quantum Launcher ?",
                "Quel mot cl√© utilise-t-on pour filtrer un `SELECT` en fonction d'une colonne ?",
                "Cite moi au moins 2 type de JOIN. +1 case si tu sais expliquer la diff√©rence !",
                "Quelle est la diff√©rence entre `PRIMARY KEY` et `FOREIGN KEY` ?",
                "√Ä quoi servent les RLS ?"
            ],
            "answers": [
                "Structured Query Language",
                "On utilise `WHERE`. Exemple : `SELECT * FROM a WHERE a.id = ?`",
                "`INNER JOIN` retourne l'intersection des 2 tables, `LEFT JOIN` retourne les lignes de la 1√®re table + l'intersection (autres r√©ponses valides accept√©es).",
                "`PRIMARY KEY` correspond √† l'id de la table, `FOREIGN KEY` r√©ference une autre table.",
                "Ajouter des r√©gles de s√©curit√© sur la db."
            ]
        },
        {
            "theme": "GIT",
            "category": "dev-tools",
            "questions": [
                "√Ä quoi sert la commande `git push` ?",
                "Quelle commande permet de lister les commits ?",
                "Qui est l'inventeur de GIT ?",
                "Quel mot cl√© utilise-t-on pour fusionner plusieurs commits ensemble lors d'un rebase ?",
                "√Ä quoi sert la commande `git cherry-pick` ?"
            ],
            "answers": [
                "Elle permet d'envoyer ses commits en local sur la remote (github par exemple).",
                "`git log`",
                "C'est Linus Torwald qui a invent√© GIT en 2005.",
                "On utilise le mot cl√© `squash` ou `fixup`. `Fixup` garde uniquement le dernier message et `squash` les gardent tous.",
                "Elle permet d'appliquer le code d'un commit pr√©cis √† notre √©tat courant."
            ]
        },
        {
            "theme": "VSCode",
            "category": "dev-tools",
            "questions": [
                "Quel est le nom complet de VSCode ?",
                "Quel racourci permet de rechercher rapidement un fichier ?",
                "Est-il possible d'utiliser git directement avec l'interface de VSCode ?",
                "Quelle touche permet de cr√©er plusieurs curseurs au clique pour √©crire √† plusieurs endroits en m√™me temps ?",
                "Comment faire pour changer le nombre d'espaces utilis√©s pour une tab dans le code ? (passer de 2 √† 4 par exemple)"
            ],
            "answers": [
                "Visual Studio Code",
                "‚åò+P sur Mac ou control+P sur Windows",
                "Oui tout √† fait ! C'est assez pratique d'ailleurs üòâ",
                "Il s'agit de la touche alt (‚å•)",
                "Il existe plusieurs solutions, on peut changer les settings g√©n√©raux, ceux du workspace, ou utiliser un formatteur comme Prettier par exemple."
            ]
        },
        {
            "theme": "Commandes shell",
            "category": "dev-tools",
            "questions": [
                "La commande `cd` permet-elle de changer de dossier ou d'√©couter un CD ?",
                "Quelle option de `ls` permet d'afficher les fichiers cach√©s (dot files)",
                "Quel symbole utilise-t-on devant une variable pour acc√©der √† sa valeur ?",
                "Comment ajoute-on les droits d'√©criture sur un fichier ?",
                "Comment fait-on pour ex√©cuter une commande en background en √©vitant qu'elle affiche des messages ?"
            ],
            "answers": [
                "cd (change directory), permet de changer de dossier.",
                "`ls -a`",
                "On utilise `$`, par exemple `echo $PWD` affiche la variable PWD qui contient le dossier courant.",
                "`chmod +w file.txt` ajoute les droits d'√©critures pour tout type d'utilisateur",
                "On utilise `&` suivi de `> /dev/null` pour rediriger les messages."
            ]
        },
        {
            "theme": "Commandes shell #2",
            "category": "dev-tools",
            "questions": [
                "Comment s'appelle l'utilitaire de ligne de commande le plus populaire sur Linux, `Bash` ou `Cash` ?",
                "La commande `touch` sert √† dater un fichier, mais elle permet aussi de... ?",
                "Parmi les commandes `rn`, `rename` et `mv`, lesquelles permettent de renommer un fichier ?",
                "Quelle commande permet d'effectuer des recherches tr√®s pr√©cises dans les fichiers et dossiers ?",
                "Que signifie chaque chiffre dans la commande `chmod 750` ?"
            ],
            "answers": [
                "Bash, pour Bourne-Again SHell. Bash est √† la fois un utilitaire (un `shell`) et un language de programmation.",
                "Cr√©er un fichier s'il n'existe pas tout en √©vitant de l'√©craser s'il existe d√©j√†, contrairement √† `make`.",
                "Par d√©faut seul `mv` est disponible sur toutes les distributions Linux, mais certaines disposent de `rename`.",
                "La commande `grep`, qui compare les chaines de caract√®res pr√©sentes dans les donn√©es avec un sch√©ma fourni.",
                "Le 7 signifie `propri√©taires: tous les droits`, le 5 `groupes: lire/ex√©cuter` et le 0 `autres: aucun droit`."
            ]
        },
        {
            "theme": "Structures de donn√©es",
            "category": "algo-paradigms",
            "questions": [
                "Si `arr.length === 3` renvoie `true`, combien d'√©l√©ments contient `arr` ?",
                "Quels caract√®res utilise-t-on pour d√©clarer un tableau en JavaScript ?",
                "Quelle est la diff√©rence entre les structures de donn√©es stack (pile) et queue ?",
                "Quelle structure est la meilleure entre une liste cha√Æn√©e et un tableau lorsqu'on doit souvent ins√©rer des donn√©es ?",
                "Quelle est la complexit√© temporelle en insertion dans un arbre rouge noir ?"
            ],
            "answers": [
                "3 √©videmment ! Et non, il n'y a pas de pi√®ge üòÖ",
                "Comme dans beaucoup de langages, on utilise les crochets : `[]`.",
                "Les deux ajoutent les √©l√©ments par le haut mais la queue les retire par le bas alors que la stack les retire par le haut.",
                "C'est la liste cha√Æn√©e car dans le cas d'un tableau on doit le recr√©er enti√®rement √† chaque insertion.",
                "`O(log(n))`, m√™me chose pour l'acc√®s et la suppression."
            ]
        },
        {
            "theme": "Base binaire",
            "category": "algo-paradigms",
            "questions": [
                "Quels chiffres sont utilis√©s pour √©crire du binaire ?",
                "Quelle est la diff√©rence entre un bit et un octet (byte) ?",
                "Combien fait le chiffre binaire 101010 en decimal ?",
                "√Ä quoi servent respectivement les operateurs `^`, `|`, `&`, et `~` (en JS par exemple) ? (avance de 1 par bonne r√©ponse)",
                "D√©cris les op√©rations binaires pour extraire le vert d'une couleur stock√©e dans un nombre."
            ],
            "answers": [
                "On utilise les chiffres 1 et 0.",
                "Un octet est un ensemble de 8 bits. `10010011` est un octet.",
                "42",
                "Ils effectuent des op√©rations binaires, dans le m√™me ordre : XOR, OR, AND et NOT.",
                "`const green = (color >> 8) & 0xFF`"
            ]
        },
        {
            "theme": "Design patterns",
            "category": "algo-paradigms",
            "questions": [
                "Le design pattern Factory sert √† cr√©er des objets ou recycler des chaussures ?",
                "√Ä quoi sert un Singleton ?",
                "Comment fonctionne le design pattern Observer ?",
                "Explique la diff√©rence entre les patterns de cr√©ation (creational patterns) et de structure (structural patterns).",
                "Comment faire pour implementer le design pattern Iterator en JavaScript ?"
            ],
            "answers": [
                "Cr√©er des objets üôÑ",
                "Un Singleton permet de partager l'instance d'un objet globalement et s'assurer qu'il n'y ait qu'une seule instance.",
                "On attache des observers √† un objet ce qui permet de tous les notifier avec un event. C'est comme √ßa que fonctionne `addEventListener` en JS par exemple.",
                "Cr√©ation : l'instantiation des objets. Structure : la relation entre les objets.",
                "En retournant un objet avec une methode `next: () => ({done, value})` et `[Symbol.iterator]: () => this`"
            ]
        },
        {
            "theme": "Requ√™te HTTP",
            "category": "dev-back",
            "questions": [
                "Une url HTTP commence-t-elle par `http://` ou `html://` ?",
                "Laquelle de ses m√©thodes n'existe pas en HTTP : `GET`, `POST`, `PASTE`, `DELETE` ?",
                "Comment appelle-t-on la partie de la requ√™te permettant de passer des donn√©es ?",
                "√Ä quoi servent les cookies ? üç™",
                "√Ä quoi sert le status 218 ?"
            ],
            "answers": [
                "`http://` üôÑ",
                "`PASTE`",
                "Le `body`, il s'agit du texte directement apr√®s les headers.",
                "√Ä garder des donn√©es d'une requ√™te √† l'autre, des infos utilisateur par exemple.",
                "√Ä contourner le comportement d'Apache utilis√© comme un reverse proxy dans le cas d'une erreur 404, mais si tu le savais pas c'est pas bien grave üòÖ"
            ]
        },
        {
            "theme": "Go",
            "category": "dev-back",
            "questions": [
                "Quel mot cl√© utilise t'on pour d√©clarer une fonction ?",
                "√Ä quoi sert l'op√©rator `:=` ?",
                "Quel op√©rateur utilise-t-on pour d√©r√©f√©rencer un pointer ?",
                "Quelle est la diff√©rence entre `array` et `slice` ?",
                "Comment partage-t-on des donn√©es √† travers plusieurs goroutines ?"
            ],
            "answers": [
                "Le mot cl√© `func`.",
                "Il permet de d√©clarer une variable avec une valeur en inf√©rant son type automatiquement.",
                "On utilise `*` comme en C.",
                "Contrairement aux arrays, les slices peuvent avoir une taille qui change dynamiquement.",
                "On utilise les channels, d√©clar√©s avec le mot cl√© `chan`."
            ]
        },
        {
            "theme": "HTML",
            "category": "dev-front",
            "questions": [
                "Quelle balise HTML est utilis√©e pour cr√©er des liens hypertextes ?",
                "Comment inclure une feuille de style externe dans une page HTML ?",
                "Quel attribut HTML est utilis√© pour d√©finir du texte en exposant ?",
                "Comment incorporer une vid√©o avec des contr√¥les de lecture dans une page ?",
                "Quel attribut permet de stocker des donn√©es personnalis√©es ?"
            ],
            "answers": [
                "La balise pour les liens est `<a>`",
                "Incluez une feuille de style externe avec `<link rel=\"stylesheet\" href=\"style.css\">`",
                "L'attribut pour le texte en exposant est `<p>10<sup>2</sup></p>` (pour 10 au carr√©).",
                "Int√©grez une vid√©o avec contr√¥les via `<video controls><source src=\"video.mp4\" type=\"video/mp4\"></video>`",
                "Utilisez l'attribut `data-*` (par exemple, `data-info=\"valeur\"`)"
            ]
        },
        {
            "theme": "Testeur d'api",
            "category": "dev-tools",
            "questions": [
                "Donne moi le nom d'un testeur d'api?",
                "A quoi √ßa sert un testeur d'api ? ",
                "Si je fais une requ√™te sur `https://www.google.com/`, √ßa fonctionne ?",
                "Peut-on cr√©er un environnement dans un testeur d'api ? Et √† quoi √ßa nous sert ?",
                "Dans le cas o√π j'ai plusieurs tests, c'est possible de les lancer tous en m√™me temps ? "
            ],
            "answers": [
                "Postman, Bruno, ...",
                "Faire des requettes http sans coder et v√©rifier que tes routes fonctionnent bien.",
                "Oui, √† partir du moment o√π la requ√™te est autoris√©e, le logiciel peu la g√©rer",
                "Oui, pour pouvoir tester sur d'autres machines sans avoir de contraintes.",
                "Oui, pour √ßa j'ai cr√©√© un sc√©nario de test ou j'ai d√©j√† pr√©alablement fait tout mes tests."
            ]
        },
        {
            "theme": "Complexit√© algorithmique",
            "category": "algo-paradigms",
            "questions": [
                "A quoi sert la complexit√© d'un algo ?",
                "Quels sont les 2 cas extr√™mes pour lesquels on calcule la complexit√© ?",
                "Si j'ai une boucle qui it√®re n fois, de combien sera la complexit√© de celle-ci ?",
                "Quelle notation utilise-t-on pour parler d'une complexit√© lin√©aire dans le pire des cas ?",
                "Parmi les algo de tri classiques, quelle est la complexit√© dans le pire des cas la plus faible ?"
            ],
            "answers": [
                "Mesurer la quantit√© de ressources (temps, espaces m√©moire) que l'algo utilise dans diff√©rents cas",
                "Dans le pire des cas et dans le meilleur",
                "La complexit√© sera de n, quel que soit le cas",
                "On utilise O(n) (grand O de n). C'est une notation math√©matiques, utilis√©e pour de la comparaison asymptotique",
                "C'est n*log(n). Algo de tri fusion et par tas, par exemple"
            ]
        }
    ]
}
